# Template to create a server with OpenSwan acting as VPN IPSec endpoint

AWSTemplateFormatVersion: "2010-09-09"
Description: "OpenSwan acting as VPN IPSec endpoint"

# Input parameters for the stack
Parameters:

  # The key pair for the server
  KeyName:
    Description: "Key Pair Name for SSH access"
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: aws-in-action-key-pair
    ConstraintDescription: "Must be the name of an existing key pair"

  # The VPC on which to create the server
  VPC:
    Description: "Select the VPC for your server"
    Type: "AWS::EC2::VPC::Id"

  # The Subnet on which to create the server
  Subnet:
    Description: "Select the subnet for your server"
    Type: "AWS::EC2::Subnet::Id"

  # VPN Configuration requires a shared secret, a user and a password
  IPSecSharedSecret:
    Description: "The shared secret key for IPSec"
    Type: String

  VPNUser:
    Description: "The VPN user"
    Type: String

  VPNPassword:
    Description: "The VPN password"
    Type: String


# Key-value maps that will be used in the resources section
Mappings:

  # Map that takes a region and maps it to the AMI ID of the Ubuntu 64 bit image
  AWSRegionToAMI:
    us-east-1:
      ubuntu64bit: ami-6edd3078    
    us-east-2:
      ubuntu64bit: ami-fcc19b99

# The Actual infrastructure resources
Resources:

  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: "t2.micro"
      SecurityGroupIds: 
        - !Ref InstanceSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !FindInMap [ AWSRegionToAMI , !Ref 'AWS::Region', ubuntu64bit ]
      SubnetId: !Ref Subnet
      
      # The last command will fail, but i've kept it for demonstration purposes
      UserData:
        "Fn::Base64": !Sub |
          #!/bin/bash -xe
          export IPSEC_PSK=${IPSecSharedSecret}
          export VPN_USER=${VPNUser}
          export VPN_PASSWORD=${VPNPassword}
          export STACK_NAME=${AWS::StackName}
          export REGION=${AWS::Region}
          curl -s https://raw.githubusercontent.com/AWSinAction/code/master/chapter5/vpn-setup.sh | bash -ex



  # Security Groups for the server
  InstanceSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Security Group created from CloudFormation for VPN server"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"
        - IpProtocol: udp
          FromPort: 500
          ToPort: 500
          CidrIp: "0.0.0.0/0"
        - IpProtocol: udp
          FromPort: 1701
          ToPort: 1701
          CidrIp: "0.0.0.0/0"
        - IpProtocol: udp
          FromPort: 4500
          ToPort: 4500
          CidrIp: "0.0.0.0/0"

# Output information of the stack
Outputs:
  
  ServerIP:
    Description: "Public IP address of the vpn server"
    Value: !GetAtt EC2Instance.PublicIp
  
  IPSecSharedSecret:
    Description: "The shared key for the VPN connection (IPSec)"
    Value: !Ref IPSecSharedSecret

  VPNUser:
    Description: "The username for the VPN connection"
    Value: !Ref VPNUser

  VPNPassword:
    Description: "The password for the VPN connection"
    Value: !Ref VPNPassword
